//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cvthequeweb
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CVThequeEntities : DbContext
    {
        public CVThequeEntities()
            : base("name=CVThequeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Candidat> Candidats { get; set; }
        public virtual DbSet<Centre_Interet> Centre_Interet { get; set; }
        public virtual DbSet<Certification> Certifications { get; set; }
        public virtual DbSet<Competences_Professionnelles> Competences_Professionnelles { get; set; }
        public virtual DbSet<Experiences_Professionnelles> Experiences_Professionnelles { get; set; }
        public virtual DbSet<Formation> Formations { get; set; }
        public virtual DbSet<Jointure> Jointures { get; set; }
        public virtual DbSet<Langue> Langues { get; set; }
        public virtual DbSet<Poste_Souhaite> Poste_Souhaite { get; set; }
        public virtual DbSet<Projet_Realise> Projet_Realise { get; set; }
        public virtual DbSet<Reference> References { get; set; }
    
        public virtual ObjectResult<GetCandidat_Result> GetCandidat(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCandidat_Result>("GetCandidat", idParameter);
        }
    
        public virtual ObjectResult<GetCentresInteret_Result> GetCentresInteret(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCentresInteret_Result>("GetCentresInteret", idParameter);
        }
    
        public virtual ObjectResult<GetCertification_Result> GetCertification(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCertification_Result>("GetCertification", idParameter);
        }
    
        public virtual ObjectResult<GetCompetences_Result> GetCompetences(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompetences_Result>("GetCompetences", idParameter);
        }
    
        public virtual ObjectResult<GetExperiences_Result> GetExperiences(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExperiences_Result>("GetExperiences", idParameter);
        }
    
        public virtual ObjectResult<GetFormation_Result> GetFormation(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFormation_Result>("GetFormation", idParameter);
        }
    
        public virtual ObjectResult<GetJointure_Result> GetJointure(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetJointure_Result>("GetJointure", idParameter);
        }
    
        public virtual ObjectResult<GetLangue_Result> GetLangue(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLangue_Result>("GetLangue", idParameter);
        }
    
        public virtual ObjectResult<GetPoste_Result> GetPoste(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPoste_Result>("GetPoste", idParameter);
        }
    
        public virtual ObjectResult<GetProjet_Result> GetProjet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjet_Result>("GetProjet", idParameter);
        }
    
        public virtual ObjectResult<GetReferences_Result> GetReferences(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReferences_Result>("GetReferences", idParameter);
        }
    }
}
